{"name":"OkCupid Auto-Messenger Node Web App","google":"","tagline":"A Node.js (Express) Application For Auto-Messaging Your OkCupid Matches","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"# Relationship Bootstrap\r\n\r\n<p>A Node.js application for auto-messaging all of your matches on OkCupid. This application is the follow up to my previous\r\nforay into automated online dating, OkCupid_Match_Messenger (Ruby version).</p>\r\n\r\n<h3>\r\n<a name=\"how-do-relationship-bootstrap-and-okcupid-match-messenger-ruby-version-compare\" class=\"anchor\" href=\"#how-do-relationship-bootstrap-and-okcupid-match-messenger-ruby-version-compare\"><span class=\"mini-icon mini-icon-link\"></span></a>How do Relationship Bootstrap and OkCupid Match Messenger (Ruby Version) Compare?</h3>\r\n\r\n<p>Unlike its predecessor, which was only a command line Ruby script, Relation Bootstrap has a web based user friendly interface\r\nwhere the user can configure how the application will auto-message others and set filters to specify what type of people the\r\nuser woud like to message.</p>\r\n\r\n<h3>\r\n<a name=\"how-does-filtering-work\" class=\"anchor\" href=\"#how-does-filtering-work\"><span class=\"mini-icon mini-icon-link\"></span></a>How does filtering work?</h3>\r\n\r\n<p>A user can filter whom the application will auto-message by the following dimensions:</p>\r\n\r\n<ol>\r\n<li>Match %</li>\r\n<li>Friend %</li>\r\n<li>Enemy %</li>\r\n<li>Who's New</li>\r\n<li>Last Online</li>\r\n<li>Special Blend</li>\r\n<li>Match % &amp; New</li>\r\n<li>Match % &amp; Last Online</li>\r\n<li>Match % &amp; Distance</li>\r\n</ol><h2>\r\n<a name=\"installation-nodejs--dependencies\" class=\"anchor\" href=\"#installation-nodejs--dependencies\"><span class=\"mini-icon mini-icon-link\"></span></a>Installation (Node.js &amp; Dependencies)</h2>\r\n\r\n<h3>\r\n<a name=\"install-nodejs\" class=\"anchor\" href=\"#install-nodejs\"><span class=\"mini-icon mini-icon-link\"></span></a>Install Node.js</h3>\r\n\r\n<h5>\r\n<a name=\"use-a-pre-compiled-installer-for-your-operating-system\" class=\"anchor\" href=\"#use-a-pre-compiled-installer-for-your-operating-system\"><span class=\"mini-icon mini-icon-link\"></span></a>Use a pre-compiled installer for your operating system</h5>\r\n\r\n<p>These can be found at the official Node.js website</p>\r\n\r\n<p><a href=\"http://nodejs.org/\">http://nodejs.org/</a></p>\r\n\r\n<h5>\r\n<a name=\"use-the-package-manager-homebrew-osx-only\" class=\"anchor\" href=\"#use-the-package-manager-homebrew-osx-only\"><span class=\"mini-icon mini-icon-link\"></span></a>Use the package manager Homebrew (OSX only)</h5>\r\n\r\n<p>Install Homebrew</p>\r\n\r\n<p><code>/usr/bin/ruby -e \"$(/usr/bin/curl -fsSL <a href=\"https://raw.github.com/mxcl/homebrew/master/Library/Contributions/install_homebrew.rb)\">https://raw.github.com/mxcl/homebrew/master/Library/Contributions/install_homebrew.rb)</a>\"</code></p>\r\n\r\n<p>Install Node.js</p>\r\n\r\n<p><code>brew install node</code></p>\r\n\r\n<p>Install NPM (Node Package Manager)</p>\r\n\r\n<p><code>curl <a href=\"http://npmjs.org/install.sh\">http://npmjs.org/install.sh</a> | sh</code></p>\r\n\r\n<h3>\r\n<a name=\"install-mongodb\" class=\"anchor\" href=\"#install-mongodb\"><span class=\"mini-icon mini-icon-link\"></span></a>Install MongoDB</h3>\r\n\r\n<p>If you already have Homebrew installed from the previous step it's as easy as...</p>\r\n\r\n<p><code>brew install mongodb</code></p>\r\n\r\n<h3>\r\n<a name=\"install-dependencies\" class=\"anchor\" href=\"#install-dependencies\"><span class=\"mini-icon mini-icon-link\"></span></a>Install Dependencies</h3>\r\n\r\n<h5>\r\n<a name=\"nodejs-dependencies\" class=\"anchor\" href=\"#nodejs-dependencies\"><span class=\"mini-icon mini-icon-link\"></span></a>Node.js Dependencies</h5>\r\n\r\n<p>Install required Node packages individually</p>\r\n\r\n<p><code>npm install express</code></p>\r\n\r\n<p><code>npm install mongoose</code></p>\r\n\r\n<p><code>npm install request</code></p>\r\n\r\n<p><code>npm install jsdom</code></p>\r\n\r\n<p><code>npm install ejs</code></p>\r\n\r\n<p><code>npm install stylus</code></p>\r\n\r\n<p>Or install them simultanesouly from those specified in package.json. Within the top level directory of the application run</p>\r\n\r\n<p><code>npm install</code></p>\r\n\r\n<h2>\r\n<a name=\"quick-start\" class=\"anchor\" href=\"#quick-start\"><span class=\"mini-icon mini-icon-link\"></span></a>Quick Start</h2>\r\n\r\n<h3>\r\n<a name=\"create-the-mongodb-database-you-will-use\" class=\"anchor\" href=\"#create-the-mongodb-database-you-will-use\"><span class=\"mini-icon mini-icon-link\"></span></a>Create the MongoDB database you will use</h3>\r\n\r\n<p>At the Mongo cmd line type:</p>\r\n\r\n<p><code>use database_name</code></p>\r\n\r\n<p>Where \"database_name\" represents whatever you named your database earlier</p>\r\n\r\n<h3>\r\n<a name=\"configure-the-application-for-deployment\" class=\"anchor\" href=\"#configure-the-application-for-deployment\"><span class=\"mini-icon mini-icon-link\"></span></a>Configure the application for deployment</h3>\r\n\r\n<p>Specify the MongoDB database you made earlier in okcupid.js</p>\r\n\r\n<p>Add your OkCupid username and password where needed in okcupid.js</p>\r\n\r\n<h3>\r\n<a name=\"start-the-application\" class=\"anchor\" href=\"#start-the-application\"><span class=\"mini-icon mini-icon-link\"></span></a>Start The Application</h3>\r\n\r\n<p>Spinning up the app's server is as easy as:</p>\r\n\r\n<p><code>node app.js</code></p>\r\n\r\n<h2>\r\n<a name=\"more-information\" class=\"anchor\" href=\"#more-information\"><span class=\"mini-icon mini-icon-link\"></span></a>More Information</h2>\r\n\r\n<p>The application needs an OkCupid authenticity token in order to sucessfully send requests to their servers and receive\r\ncontent back. Unfortunately this is the only step in the entire process that hasn't been automated yet.</p>\r\n\r\n<p>My method for obtaining said auth token is as follows:</p>\r\n\r\n<ol>\r\n<li><p>Go to OkCupid.com in a browser capable of viewing the HTTP requests going in and out (I found Firefox / Firebug best for\r\nthis process).</p></li>\r\n<li><p>Send a message to anyone on the site and inspect the POST request to <a href=\"http://www.okcupid.com/mailbox\">http://www.okcupid.com/mailbox</a> to find the Form Date,\r\nwhich looks like this:</p></li>\r\n</ol><p>Form Data (url encoded)</p>\r\n\r\n<p>ajax:1\r\nsendmsg:1\r\nr1:okaycupidgrl\r\nsubject:\r\nbody:hey!\r\nthreadid:0\r\nauthcode:1%2C0%2C1339917833%2C0x3c555cf6c4f6d5af%3Bb16d35ec40883e324e28d4fed05cce9799216a6b\r\nreply:0\r\nfrom_profile:1</p>\r\n\r\n<ol>\r\n<li>Copy the 'authcode' key and paste it into okcupid.js.</li>\r\n"}